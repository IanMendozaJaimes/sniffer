/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package Clases;

import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JTextArea;

/**
 *
 * @author Ian
 */
public class IcmpVentana extends javax.swing.JFrame {

    private JTextArea consola;
    private Sincronizador s;
    
    public IcmpVentana(JTextArea consola) {
        initComponents();
        btnGenerar.setEnabled(true);
        btnParar.setEnabled(false);
        this.consola = consola;
        this.s = new Sincronizador();
    }

    private IcmpVentana() {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txtNum = new javax.swing.JTextField();
        btnGenerar = new javax.swing.JButton();
        btnParar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Generar tramas ICMP");

        jLabel2.setText("NÃºmero de tramas (dejar en blanco para indeterminado)");

        btnGenerar.setText("Generar");
        btnGenerar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGenerarActionPerformed(evt);
            }
        });

        btnParar.setText("Parar");
        btnParar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPararActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, 308, Short.MAX_VALUE)
                    .addComponent(txtNum)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnGenerar, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnParar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtNum, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 27, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnParar)
                    .addComponent(btnGenerar, javax.swing.GroupLayout.Alignment.TRAILING))
                .addGap(23, 23, 23))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnGenerarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGenerarActionPerformed
        // Comenzar a generar tramas ICMP
        
        int numTramas = -1;
        Configuracion conf = new Configuracion();
        
        try{
            numTramas = Integer.parseInt(txtNum.getText());
        }
        catch(Exception e){
            numTramas = -1;
        }
        
        Icmp icmp = new Icmp(numTramas, conf.getMAC(), s);
        icmp.start();
        
    }//GEN-LAST:event_btnGenerarActionPerformed

    private void btnPararActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPararActionPerformed
        // Parar de generar tramas ICMP
        s.cambiar();
    }//GEN-LAST:event_btnPararActionPerformed

    class Icmp extends Thread{
        
        private int numTramas;
        private String macOrigen;
        private Sincronizador sinc;
        private int tiempo;
        
        public Icmp(int numTramas, String macOrigen, Sincronizador sinc){
            this.numTramas = numTramas;
            this.macOrigen = macOrigen;
            this.sinc = sinc;
            this.tiempo = 100;
        }
        
        @Override
        public void run(){
            Generar g = new Generar(consola);
            g.setInterfaz(macOrigen);
            btnGenerar.setEnabled(false);
            btnParar.setEnabled(true);
            try{
                byte trama[] = g.generarICMP();
                sinc.ocupado = true;
                sinc.contando = true;
                if(numTramas > 0){
                    for(int i = 0; i < numTramas; i++){
                        g.enviarTrama(trama);
                        sinc.ocupado = false;
                        sleep(tiempo);
                        sinc.ocupado = true;
                        if(!sinc.contando){
                            sinc.ocupado = false;
                            sinc.contando = false;
                            break;
                        }
                    }
                }
                else{
                    while(true){
                        g.enviarTrama(trama);
                        sinc.ocupado = false;
                        sleep(tiempo);
                        sinc.ocupado = true;
                        if(!sinc.contando){
                            sinc.ocupado = false;
                            sinc.contando = false;
                            break;
                        }
                    }
                }
            }
            catch(Exception e){
                imprimir("ERROR: " + e.toString());
            }
            finally{
                btnGenerar.setEnabled(true);
                btnParar.setEnabled(false);
            }
        }
    }
    
    class Sincronizador{
        boolean contando = true;
        boolean ocupado = true;
        
        public synchronized void cambiar(){
            while(ocupado == true){
                try {
                    wait();
                } catch (InterruptedException ex) {
                    Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
            contando = false;
        }
    }
    
    public void imprimir(String texto){
        consola.setText(consola.getText() + "\n" + texto);
    }
    
    
    
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(IcmpVentana.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(IcmpVentana.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(IcmpVentana.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(IcmpVentana.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new IcmpVentana().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnGenerar;
    private javax.swing.JButton btnParar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JTextField txtNum;
    // End of variables declaration//GEN-END:variables
}
